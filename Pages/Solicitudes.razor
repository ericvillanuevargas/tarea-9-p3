@page "/Solicitudes"
@using Microsoft.Extensions.Logging
@inject ILogger<Index> Logger
@using Tarea_9.Data
@using Newtonsoft.Json;
@inject IJSRuntime js
@using System.Net.Mail;

<div class="container">
    <div class="card mb-5">
        <div class="card-header">
            <h4>Solicitud de vacunacion</h4>
        </div>
        
             <div class="card-body">
            <EditForm Model="@exampleModel" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />

                <div class="card">
                    <div class="card-header">
                        <h5>Informacion del usuario</h5>
                    </div>
                    <div class="card-body">
                        <label>Cedula</label>
                        <InputText id="name" placeholder="Escriba su numero de cedula..." class="form-control" @oninput="BuscarCedula" @bind-Value="exampleModel.Cedula" />
                        <ValidationMessage For=@(() => exampleModel.Cedula) />
                        @if (B_Cedula != null)
                        {@if (B_Cedula.ok == false)
                            {<span class="text-danger d-block">@Mensaje</span>}}
                        <label class="mt-2">Nombre</label>
                        <InputText id="name" placeholder="Escriba su nombre..." class="form-control" @bind-Value="exampleModel.Nombre" />
                        <ValidationMessage For=@(() => exampleModel.Nombre) />
                        <label class="mt-2">Apellido</label>
                        <InputText id="name" placeholder="Escriba los apellidos..." class="form-control" @bind-Value="exampleModel.Apellido" />
                        <ValidationMessage For=@(() => exampleModel.Apellido) />
                        <label class="mt-2">Fecha de nacimiento</label>
                        <InputText id="name" type="date" class="form-control" @bind-Value="exampleModel.Fecha_Nacimiento" />
                        <ValidationMessage For=@(() => exampleModel.Fecha_Nacimiento) />
                        <label class="mt-2">Tipo de sangre</label>
                        <InputSelect class="form-control" @bind-Value="exampleModel.Tipo_Sangre">
                            <option value="" selected disabled>Seleccione el tipo de sangre</option>
                            <option value="A+">A+</option>
                            <option value="A-">A-</option>
                            <option value="B+">B+</option>
                            <option value="B-">B-</option>
                            <option value="O+">O+</option>
                            <option value="O-">O-</option>
                            <option value="AB+">AB+</option>
                            <option value="AB-">AB-</option>
                            <option value="RH Nulo">RH Nulo</option>
                        </InputSelect>
                        <ValidationMessage For=@(() => exampleModel.Tipo_Sangre) />

                    </div>
                </div>
                <div class="card">
                    <div class="card-header">
                        <h5>Contacto</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <label>Telefono</label>
                                <InputText id="name" placeholder="Escriba su numero de telefono..." class="form-control" @bind-Value="exampleModel.Telefono" />
                                <ValidationMessage For=@(() => exampleModel.Telefono) />
                            </div>
                            <div class="col">
                                <label>Correo</label>
                                <InputText id="name" placeholder="Escriba su correo..." type="email" class="form-control" @bind-Value="exampleModel.Correo" />
                                <ValidationMessage For=@(() => exampleModel.Correo) />
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col">
                                <label>Provincia</label>
                                <select class="form-control" @onchange="BuscarMunicipio">
                                    <option value="" selected disabled>Seleccione la provincia</option>
                                    @if (B_Provincias != null)
                                    {
                                        foreach (var item in B_Provincias.data)
                                        {
                                            <option value="@item.codigo">@item.nombre</option>
                                        }
                                    }
                                </select>
                                <InputText type="hidden" class="form-control" @bind-Value="exampleModel.Provincia" />
                                <ValidationMessage For=@(() => exampleModel.Provincia) />
                            </div>
                            <div class="col">
                                <label>Municipio @m</label>
                                <InputSelect class="form-control" @bind-Value="exampleModel.Municipio">
                                    <option value="" selected disabled>Seleccione el municipio</option>
                                    @if (B_Municipio != null)
                                    {
                                        foreach (var item in B_Municipio.data)
                                        {
                                            <option value="@item.nombre">@item.nombre</option>
                                        }
                                    }
                                </InputSelect>
                                <ValidationMessage For=@(() => exampleModel.Municipio) />
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col">
                                <label>Distrito municipal o el barrio</label>
                                <InputText id="name" placeholder="Escriba el nombre distrito municipal o el nombre del barrio..." class="form-control" @bind-Value="exampleModel.Distrito_Municipal" />
                                <ValidationMessage For=@(() => exampleModel.Distrito_Municipal) />
                            </div>
                            <div class="col">
                                <label>Nombre de la calle</label>
                                <InputText id="name" placeholder="Escriba el nombre de la calle..." class="form-control" @bind-Value="exampleModel.Nombre_Calle" />
                                <ValidationMessage For=@(() => exampleModel.Nombre_Calle) />
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col">
                                <label>Numero de la calle</label>
                                <InputText id="name" class="form-control" placeholder="Escriba el numero de la calle..." @oninput="BuscarLang" @bind-Value="exampleModel.No_Calle" />
                                <ValidationMessage For=@(() => exampleModel.No_Calle) />
                            </div>
                            <div class="col">
                                <label>Numero de la casa</label>
                                <InputText id="name" placeholder="Escriba el numero de la casa..." class="form-control" @bind-Value="exampleModel.No_Casa" />
                                <ValidationMessage For=@(() => exampleModel.No_Casa) />
                            </div>
                        </div>
                        <label>Direccion</label>
                        <InputTextArea id="name" placeholder="Escriba su direccion..." class="form-control" @bind-Value="exampleModel.Direccion" />
                        <ValidationMessage For=@(() => exampleModel.Direccion) />
                        <div class="row mt-2">
                            <div class="col">
                                <label>Longitud</label>
                                <InputText id="name" disabled class="form-control" @bind-Value="exampleModel.Longitud" />
                                <ValidationMessage For=@(() => exampleModel.Longitud) />
                            </div>
                            <div class="col">
                                <label>Latitud</label>
                                <InputText id="name" disabled class="form-control" @bind-Value="exampleModel.Latitud" />
                                <ValidationMessage For=@(() => exampleModel.Latitud) />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Datos de la vacunacion</h5>
                    </div>
                    <div class="card-body">
                        <label>¿Te has vacunado ya?</label>
                        <InputSelect class="form-control" @bind-Value="exampleModel.Vacunacion">
                            <option value="" selected disabled>Seleccione una respuesta</option>
                            <option value="Si">Si</option>
                            <option value="No">No</option>
                        </InputSelect>
                        <ValidationMessage For=@(() => exampleModel.Vacunacion) />
                        <label class="mt-2">Justifique porque deben vacunarlo en su casa</label>
                        <InputTextArea placeholder="Escriba la justificacion..." class="form-control" @bind-Value="exampleModel.Justificacion" />
                        <ValidationMessage For=@(() => exampleModel.Justificacion) />
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col">
                        <button type="submit" class="btn btn-success w-100" data-toggle="modal" data-target="#exampleModal" >Guardar</button>
                    </div>
                    <div class="col">
                        <button type="reset" class="btn btn-info w-100">Limpiar</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>


      
      

    





@code {
    Consumo API = new Consumo();
    private ExampleModel exampleModel = new();
    public dynamic B_Cedula { get; set; }
    public dynamic B_Provincias { get; set; }
    public dynamic B_Municipio { get; set; }
    public dynamic B_Distrito { get; set; }
    public dynamic B_LongLag { get; set; }
    public dynamic B_ProvinciaUnica { get; set; }
    public dynamic AGuardar { get; set; }
    string jsonString;
    string mensaje;
    string Mensaje, m;
    private string message {get; set;} = "";
    private void SendMail()
    {
        try
        {
            using(MailMessage mail = new MailMessage()){
                mail.From = new MailAddress("20198669@itla.edu.do");
                mail.To.Add(exampleModel.Correo);
                mail.Subject = "Datos personales";
                mail.Body = "<html>"+"<head>"+"<title>Informe de datos</title>"+"<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css' integrity='sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l' crossorigin='anonymous'>"+"<link rel='stylesheet' href='css/bootstrap/bootstrap.min.css' /><link href='css/site.css' rel='stylesheet' />"+"</head>"+"<body>"+"<h4><b>Datos del formulario</b></h4>"+"<table class='table'>"+"<thead class='thead-dark'><tr><th scope='col'>Datos personales</th><th scope='col'></th></tr></thead>"+"<tbody>"+"<tr><th>Cedula:</th><td>"+exampleModel.Cedula+"</td></tr>"+"<tr><th>Nombre:</th><td>"+exampleModel.Nombre+"</td></tr>"+"<tr><th>Apellido:</th><td>"+exampleModel.Apellido+"</td></tr>"+"<tr><th>Telefono:</th><td>"+exampleModel.Telefono+"</td></tr>"+"<tr><th>Correo Electronico:</th><td>"+exampleModel.Correo+"</td></tr>"+"<tr><th>Fecha de Nacimiento:</th><td>"+exampleModel.Fecha_Nacimiento+"</td></tr>"+"<tr><th>Tipo de Sangre:</th><td>"+exampleModel.Tipo_Sangre+"</td></tr>"+"<tr><th>Provincia:</th><td>"+exampleModel.Provincia+"</td></tr>"+"<tr><th>Direccion:</th><td>"+exampleModel.Direccion+"</td></tr>"+"<tr><th>Latitud:</th><td>"+exampleModel.Latitud+"</td></tr>"+"<tr><th>Longitud:</th><td>"+exampleModel.Longitud+"</td></tr>"+"<tr><th>Le ha dado covid-19:</th><td>"+exampleModel.Vacunacion+"</td></tr>"+"<tr><th>Justificacion:</th><td>"+exampleModel.Justificacion+"</td></tr>"+"</tbody>"+"</table>"+"<script src='https://code.jquery.com/jquery-3.5.1.slim.min.js' integrity='sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' crossorigin='anonymous'></script>"+"<script src='https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js' integrity='sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns' crossorigin='anonymous'></script>"+"<script src='https://code.jquery.com/jquery-3.5.1.slim.min.js' integrity='sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' crossorigin='anonymous'></script>"+"<script src='https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js' integrity='sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN' crossorigin='anonymous'></script>"+"<script src='https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js' integrity='sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF' crossorigin='anonymous'></script>"+"</body>"+"</html>";
                mail.IsBodyHtml = true;

                using(SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587))
                {
                smtp.Credentials = new System.Net.NetworkCredential("20198669@itla.edu.do", "20198669");
                smtp.EnableSsl = true;
                smtp.Send(mail);
                message = "Correo Enviado...";
                }

            }
           

        }
        catch(Exception)
        {
            throw;
        }
    }

    private void HandleValidSubmit()
    {
        jsonString = JsonConvert.SerializeObject(exampleModel);
        AGuardar = API.Post("https://api-solicitud-vacunacion.herokuapp.com/api/RegistrarSolicitudVacunacion", jsonString);
        if (AGuardar != null)
        {
            Mensajes();
           if(AGuardar.ok == true){
                
                SendMail();
           }
        }

    }

    public void BuscarCedula(ChangeEventArgs e)
    {
        B_Cedula = API.Get("https://api.adamix.net/apec/cedula/" + e.Value.ToString() + "");
        @if (B_Cedula != null || B_Cedula == false)
        {
            if (B_Cedula.ok == true)
            {
                exampleModel.Nombre = B_Cedula.Nombres;
                exampleModel.Apellido = B_Cedula.Apellido1 + " " + B_Cedula.Apellido2;
            }
            else
            {
                Mensaje = "La cedula no es valida";
            }
        }
    }
    protected override void OnInitialized()
    {
        B_Provincias = API.Get("http://provinciasrd.raydelto.org/provincias");
    }

    public void BuscarMunicipio(ChangeEventArgs e)
    {
        B_Municipio = API.Get("http://provinciasrd.raydelto.org/provincias/" + e.Value.ToString() + "/municipios");
        B_ProvinciaUnica = API.Get("http://provinciasrd.raydelto.org/provincias/" + e.Value.ToString() + "");
        if (B_ProvinciaUnica != null)
        {
            exampleModel.Provincia = B_ProvinciaUnica.data[0].nombre;
        }
        if (exampleModel.Municipio != null)
        {

        }


    }
    public void BuscarDistrito(ChangeEventArgs e)
    {
        B_Distrito = API.Get("http://provinciasrd.raydelto.org/municipios/" + e.Value.ToString() + "/distritos_municipales");

    }
    public void BuscarLang(ChangeEventArgs e)
    {
        B_LongLag = API.Get("https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyAfCsBivkdYabQdQnmCNnbWMiRnGIAYj3c&address" +
            "=" + exampleModel.Provincia + "," + exampleModel.Municipio + "," + exampleModel.Distrito_Municipal + "," + exampleModel.Nombre_Calle + ",#" + e.Value.ToString() + "");

        if (B_LongLag != null)
        {
            try
            {
                var s = B_LongLag.results[0].geometry.location.lng;
                exampleModel.Longitud = s;
                var g = B_LongLag.results[0].geometry.location.lat;
                exampleModel.Latitud = g;
                exampleModel.Direccion = "" + exampleModel.Provincia + "," + exampleModel.Municipio + "," + exampleModel.Distrito_Municipal + "," + exampleModel.Nombre_Calle + ",#" + e.Value.ToString() + "";
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);

            }
        }


    }
    private async Task Mensajes()
    {
        if (AGuardar.ok == true)
        {
            await js.InvokeVoidAsync("Confirmar", "success", "¡Exito!", "Los datos se guardaron con exito!");
        }
        else
        {
            await js.InvokeVoidAsync("Confirmar", "error", "Vaya!", "Ocurrio un error ya que haz hecho una solicitud anteriormente");
        }

    }

}
